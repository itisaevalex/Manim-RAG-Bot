Source: https://docs.manim.community/en/latest/reference/manim.mobject.mobject.html

mobject
¶
Base classes for objects that can be displayed.
Type Aliases
class
TimeBasedUpdater
¶
Callable
[[
'Mobject'
,
float
],
object
]
class
NonTimeBasedUpdater
¶
Callable
[[
'Mobject'
],
object
]
class
Updater
¶
NonTimeBasedUpdater`
|
TimeBasedUpdater`
Classes
Group
Groups together multiple
Mobjects
.
Mobject
Mathematical Object: base class for objects that can be displayed on screen.
Functions
override_animate
(
method
)
[source]
¶
Decorator for overriding method animations.
This allows to specify a method (returning an
Animation
)
which is called when the decorated method is used with the
.animate
syntax
for animating the application of a method.
See also
Mobject.animate
Note
Overridden methods cannot be combined with normal or other overridden
methods using method chaining with the
.animate
syntax.
Examples
Example: AnimationOverrideExample
¶
from
manim
import
*
class
CircleWithContent
(
VGroup
):
def
__init__
(
self
,
content
):
super
()
.
__init__
()
self
.
circle
=
Circle
()
self
.
content
=
content
self
.
add
(
self
.
circle
,
content
)
content
.
move_to
(
self
.
circle
.
get_center
())
def
clear_content
(
self
):
self
.
remove
(
self
.
content
)
self
.
content
=
None
@override_animate
(
clear_content
)
def
_clear_content_animation
(
self
,
anim_args
=
None
):
if
anim_args
is
None
:
anim_args
=
{}
anim
=
Uncreate
(
self
.
content
,
**
anim_args
)
self
.
clear_content
()
return
anim
class
AnimationOverrideExample
(
Scene
):
def
construct
(
self
):
t
=
Text
(
"hello!"
)
my_mobject
=
CircleWithContent
(
t
)
self
.
play
(
Create
(
my_mobject
))
self
.
play
(
my_mobject
.
animate
.
clear_content
())
self
.
wait
()
class CircleWithContent(VGroup):
 def __init__(self, content):
 super().__init__()
 self.circle = Circle()
 self.content = content
 self.add(self.circle, content)
 content.move_to(self.circle.get_center())

 def clear_content(self):
 self.remove(self.content)
 self.content = None

 @override_animate(clear_content)
 def _clear_content_animation(self, anim_args=None):
 if anim_args is None:
 anim_args = {}
 anim = Uncreate(self.content, **anim_args)
 self.clear_content()
 return anim

class AnimationOverrideExample(Scene):
 def construct(self):
 t = Text("hello!")
 my_mobject = CircleWithContent(t)
 self.play(Create(my_mobject))
 self.play(my_mobject.animate.clear_content())
 self.wait()
Return type
:
LambdaType