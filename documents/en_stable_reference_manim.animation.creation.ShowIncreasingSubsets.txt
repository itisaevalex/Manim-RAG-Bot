Source: https://docs.manim.community/en/stable/reference/manim.animation.creation.ShowIncreasingSubsets.html

ShowIncreasingSubsets
¶
Qualified name:
manim.animation.creation.ShowIncreasingSubsets
class
ShowIncreasingSubsets
(
mobject
=
None
,
*
args
,
use_override
=
True
,
**
kwargs
)
[source]
¶
Bases:
Animation
Show one submobject at a time, leaving all previous ones displayed on screen.
Examples
Example: ShowIncreasingSubsetsScene
¶
from
manim
import
*
class
ShowIncreasingSubsetsScene
(
Scene
):
def
construct
(
self
):
p
=
VGroup
(
Dot
(),
Square
(),
Triangle
())
self
.
add
(
p
)
self
.
play
(
ShowIncreasingSubsets
(
p
))
self
.
wait
()
class ShowIncreasingSubsetsScene(Scene):
 def construct(self):
 p = VGroup(Dot(), Square(), Triangle())
 self.add(p)
 self.play(ShowIncreasingSubsets(p))
 self.wait()
Methods
interpolate_mobject
Interpolates the mobject of the
Animation
based on alpha value.
update_submobject_list
Attributes
run_time
Parameters
:
group
(
Mobject
)
suspend_mobject_updating
(
bool
)
int_func
(
Callable
[
[
np.ndarray
]
,
np.ndarray
]
)
_original__init__
(
group
,
suspend_mobject_updating=False
,
int_func=<ufunc
'floor'>
,
reverse_rate_function=False
,
**kwargs
)
¶
Initialize self. See help(type(self)) for accurate signature.
Parameters
:
group
(
Mobject
)
suspend_mobject_updating
(
bool
)
int_func
(
Callable
[
[
ndarray
]
,
ndarray
]
)
Return type
:
None
interpolate_mobject
(
alpha
)
[source]
¶
Interpolates the mobject of the
Animation
based on alpha value.
Parameters
:
alpha
(
float
) – A float between 0 and 1 expressing the ratio to which the animation
is completed. For example, alpha-values of 0, 0.5, and 1 correspond
to the animation being completed 0%, 50%, and 100%, respectively.
Return type
:
None